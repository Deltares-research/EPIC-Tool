[tool.poetry]
name = "epic_backend"
version = "0.27.1"
description = "A Django REST Api backend for the Deltares EPIC Tool project"
authors = ["Carles S. Soriano PÃ©rez <carles.sorianoperez@deltares.nl>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
Django = "^4.0.6"
djangorestframework = "^3.13.1"
commitizen = "^2.21.2"
django-cors-headers = "^3.11.0"
coreapi = "^2.3.3"
PyYAML = "^6.0"
Pygments = "^2.11.2"
Markdown = "^3.3.6"
coreapi-cli = "^1.0.9"
uritemplate = "^4.1.1"
swagger-ui = "^0.1.2"
openpyxl = "^3.0.9"
gunicorn = "^20.1.0"
reportlab = "^3.6.9"

[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }
pylint = "^2.12.2"
flake8 = "^4.0.1"
mypy = "^0.941"
pytest = "^7.1.1"
pytest-django = "^4.5.2"
pytest-cov = "^3.0.0"

[tool.black]
line-length = 88
target-version = ['py38', 'py39']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | \.virtualenvs
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.commitizen]
name = "cz_conventional_commits"
changelog_file = "changelog.md"
update_changelog_on_bump = true
version = "0.27.1"
tag_format = "v$major.$minor.$patch"
version_files= [
    "epic_core/__init__.py",
    "pyproject.toml:version"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
